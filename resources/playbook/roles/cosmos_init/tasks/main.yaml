---
- name: Set cosmos binary
  ansible.builtin.set_fact:
    cosmos_binary: "{{ ansible_env.HOME }}/.crun/bins/{{ netname }}/{{ version }}/{{ binary }}"
- name: Check cosmos folder
  block: 
    - name: Check the folder exists
      ansible.builtin.stat:
        path: '{{ ansible_env.HOME }}/{{ cosmos_folder }}'
      register: cosmos_folder_status

    - name: Fail the folder exists
      ansible.builtin.fail:
        msg: "The folder '{{ ansible_env.HOME }}/{{ cosmos_folder }}' already exists."
      when: cosmos_folder_status.stat.exists
  when: force_install is not defined 

- name: Force install
  block: 
    - name: Ensure that service is stopped
      ansible.builtin.systemd:
        name: '{{ service_name }}'
        state: stopped
      become: true
      ignore_errors: true

    - name: Ensure that the folder does not exist
      ansible.builtin.file:
        path: '{{ ansible_env.HOME }}/{{ cosmos_folder }}'
        state: absent
  when: force_install is defined 
          

- name: Init Node
  ansible.builtin.command:
    cmd: '{{ cosmos_binary }} init {{ node_name }} --home={{ ansible_env.HOME }}/{{ cosmos_folder }} --chain-id {{ chain_id }}'

- name: Copy genesis.json
  ansible.builtin.get_url:
    url: '{{ genesis }}'
    dest: '{{ ansible_env.HOME }}/{{ cosmos_folder }}/config/genesis.json'
    mode: '0644'
    force: true

- name: Set chain-id
  ansible.builtin.command:
    cmd: '{{cosmos_binary}} config chain-id {{ chain_id }} --home={{ ansible_env.HOME }}/{{ cosmos_folder }}'
